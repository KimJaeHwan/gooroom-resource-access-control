#
# Gooroom-1.0 udev Rules
# Written by ultract
#
# Simple Debuging : ENV{DEBUG}=%c
#

#
# USB & SD-CARD Block Device to Enable/Disable
# - eject device
#
# [grac_rule]  usb_memory  disallow
#
ACTION=="add", SUBSYSTEM=="block", KERNEL=="hd[b-z]*", ENV{ID_USB_DRIVER}=="usb-storage", ENV{DEVTYPE}=="disk", RUN+="/usr/bin/grac-apply.sh usb_memory:block disallow eject %k $devpath"
ACTION=="add", SUBSYSTEM=="block", KERNEL=="hd[b-z]*", ENV{ID_USB_DRIVER}=="usb-storage", ENV{DEVTYPE}=="disk", RUN+="/usr/bin/eject /dev/%k"
ACTION=="add", SUBSYSTEM=="block", KERNEL=="sd[b-z]*", ENV{ID_USB_DRIVER}=="usb-storage", ENV{DEVTYPE}=="disk", RUN+="/usr/bin/grac-apply.sh usb_memory:block disallow eject %k $devpath"
ACTION=="add", SUBSYSTEM=="block", KERNEL=="sd[b-z]*", ENV{ID_USB_DRIVER}=="usb-storage", ENV{DEVTYPE}=="disk", RUN+="/usr/bin/eject /dev/%k"

#
# USB Block Device's Partition to Read-Only
#
# [grac_rule] usb_memory read_only
#
# NTFS by mount
SUBSYSTEM=="block", KERNEL=="sd[b-z][1-9]", ENV{ID_USB_DRIVER}=="usb-storage", ENV{DEVTYPE}=="partition", ENV{ID_FS_USAGE}=="filesystem", ENV{ID_FS_TYPE}!="ntfs", RUN+="/usr/bin/grac-apply.sh usb_memory read_only blockdev.ntfs %k $devpath"
SUBSYSTEM=="block", KERNEL=="sd[b-z][1-9]", ENV{ID_USB_DRIVER}=="usb-storage", ENV{DEVTYPE}=="partition", ENV{ID_FS_USAGE}=="filesystem", ENV{ID_FS_TYPE}!="ntfs", RUN+="/sbin/blockdev --setro /dev/%k"
#
# FAT by blockdev
ACTION=="add", DEVPATH=="*fuseblk", SUBSYSTEM=="bdi", PROGRAM="/bin/sh -c '/bin/mount | /bin/grep fuseblk | /bin/grep rw | /usr/bin/cut -d\  -f1'", RUN+="/usr/bin/grac-apply.sh usb_memory read_only remount %k $devpath"
ACTION=="add", DEVPATH=="*fuseblk", SUBSYSTEM=="bdi", PROGRAM="/bin/sh -c '/bin/mount | /bin/grep fuseblk | /bin/grep rw | /usr/bin/cut -d\  -f1'", RUN+="/bin/mount -o remount,ro %c"

#
# CDROM & DVD Disable
# 	by cdrom_id
#
# [grac_rule] cd_dvd	disallow
#
ACTION=="add", KERNEL=="sr[0-9]*", ENV{ID_CDROM}=="1", RUN+="/usr/bin/grac-apply.sh cd_dvd disallow cdrom_id.$devnode %k $devpath"
ACTION=="add", KERNEL=="sr[0-9]*", ENV{ID_CDROM}=="1", RUN+="cdrom_id --eject-media $devnode"
#
# authorized variable
#ACTION=="add", SUBSYSTEMS=="scsi", DRIVERS=="sr", RUN+="/usr/bin/grac-apply.sh cd_dvd:scsi disallow authorized %k $devpath"
#ACTION=="add", SUBSYSTEMS=="scsi", DRIVERS=="sr", RUN="/bin/sh -c 'echo 0 >/sys/\$devpath/../../../authorized'"
#
# insert disk CD or DVD
ACTION=="change", SUBSYSTEM=="block", KERNEL=="sr[0-9]*", ENV{DEVTYPE}=="disk", RUN+="/usr/bin/grac-apply.sh cd_dvd:block disallow eject %k $devpath"
ACTION=="change", SUBSYSTEM=="block", KERNEL=="sr[0-9]*", ENV{DEVTYPE}=="disk", RUN+="cdrom_id --eject-media $devnode"

#
# External Bluetooth Device Connection by PCI Bluetooth Receiver
#   - keyboard
#
#  [grac_rule] keyboard allow bluetooth
#
#ACTION=="add", ENV{ID_BUS}=="bluetooth", ENV{ID_INPUT_KEYBOARD}=="1", RUN+="/usr/bin/grac-apply.sh keyboard.%E{ID_BUS}:%E{SUBSYSTEM} allow nop.$attr{uniq} %k $devpath"
#ACTION=="add", ENV{ID_BUS}=="bluetooth", ENV{ID_INPUT_KEYBOARD}=="1", GOTO="bluetooth_end"

#
# External Bluetooth Device Connection by PCI Bluetooth Receiver
#   - mouse
#
#  [grac_rule] mouse allow bluetooth
#
#ACTION=="add", ENV{ID_BUS}=="bluetooth", ENV{ID_INPUT_MOUSE}=="1", RUN+="/usr/bin/grac-apply.sh mouse.%E{ID_BUS}:%E{SUBSYSTEM} allow nop.$attr{uniq} %k $devpath"
#ACTION=="add", ENV{ID_BUS}=="bluetooth", ENV{ID_INPUT_MOUSE}=="1", GOTO="bluetooth_end"

#
# External Bluetooth Device Connection by PCI Bluetooth Receiver
#   - Whitelist for Devices
#   - address should be replaced by actual address
#
#  [grac_rule] bluetooth disallow
#
ACTION=="add", ENV{ID_BUS}=="bluetooth", ATTRS{uniq}=="00:fb:c1:8a:71:c0", RUN+="/usr/bin/grac-apply.sh %E{ID_BUS}:%E{SUBSYSTEM} allow nop.$attr{uniq} %k $devpath"
ACTION=="add", ENV{ID_BUS}=="bluetooth", ATTRS{uniq}=="00:fb:c1:8a:71:c0", GOTO="bluetooth_end"

#
# External Bluetooth Device Connection by PCI Bluetooth Receiver
# Block All Devices
#   - Notice! blocking device except while list above 
#             grac-rule should be "ALLOW" !!!!!!
#
#  [grac_rule] bluetooth disallow
#
ACTION=="add", ENV{ID_BUS}=="bluetooth", RUN+="/usr/bin/grac-apply.sh %E{ID_BUS}:%E{SUBSYSTEM} disallow hcitool.$attr{uniq} %k $devpath"
ACTION=="add", ENV{ID_BUS}=="bluetooth", RUN+="/usr/bin/grac-hci.sh disallow $attr{uniq}"


LABEL="bluetooth_end"

#
# PCI Audio Controller
#
# [grac_rule]  sound  disallow  pci
#
ACTION=="add", ENV{PCI_CLASS}=="403[0-9]*", RUN+="/usr/bin/grac-apply.sh sound disallow rescan %k $devpath"
ACTION=="add", ENV{PCI_CLASS}=="403[0-9]*", RUN+="/bin/sh -c 'echo 1 >/sys/$devpath/remove'"

#
# PCI Wireless Lan
#
# [grac_rule] wireless  disallow
#
ACTION=="add", SUBSYSTEM=="net", ENV{DEVTYPE}=="wlan", RUN+="/usr/bin/grac-apply.sh wireless:net disallow remove %k $devpath"
ACTION=="add", SUBSYSTEM=="net", ENV{DEVTYPE}=="wlan", RUN="/bin/sh -c 'echo 1 >/sys/\$devpath/../../remove'"

#
# USB Printer
#
# [grac_rule] printer  disallow
#
ACTION=="add", KERNEL=="lp[0-9]*", RUN+="/usr/bin/grac-apply.sh printer.usb disallow authorized.lp0 %k $devpath"
ACTION=="add", KERNEL=="lp[0-9]*", RUN+="/bin/sh -c 'echo 0 >/sys/$devpath/../../authorized'"
#
#ACTION=="add", SUBSYSTEM=="usb", ENV{DRIVER}=="usblp", RUN+="/usr/bin/grac-apply.sh printer.usb disallow authorized.usblp %k $devpath"
#ACTION=="add", SUBSYSTEM=="usb", ENV{DRIVER}=="usblp", RUN+="/bin/sh -c 'echo 0 > /sys/$devpath/authorized'"
#
ACTION=="add", DRIVERS=="usblp", ATTRS{bInterfaceClass}=="07", RUN+="/usr/bin/grac-apply.sh printer.usb disallow authorized.usblp.07 %k $devpath"
ACTION=="add", DRIVERS=="usblp", ATTRS{bInterfaceClass}=="07", RUN+="/bin/sh -c 'echo 0 >/sys/$devpath/authorized'"




#---------------------- followings are testing, do not use ----
#
# USB Wired Keyboard & Mouse
#
#ACTION=="add", SUBSYSTEM=="input", ENV{ID_INPUT_KEYBOARD}=="1", MODE="0000"

#ACTION=="add", SUBSYSTEM=="input", SUBSYSTEMS=="usb", ATTRS{authorized}=="1", ENV{PARID}="$id", RUN+="/bin/sh -c 'echo 0 >/sys/bus/usb/devices/$env{PARID}/authorized'"

#ACTION=="add", SUBSYSTEM=="usb", ENV{DEVTYPE}=="usb_interface", ENV{DRIVER}=="usbhid", RUN="/bin/sh -c 'echo 0 >/sys/\$devpath/authorized'"

#ACTION=="add", SUBSYSTEM=="input", ENV{ID_BUS}=="usb", ENV{ID_INPUT_MOUSE}=="1", ENV{ID_USB_DRIVER}=="usbhid", RUN="/bin/sh -c 'echo 0 >/sys/\$devpath/../../../../authorized'"

#ACTION=="add", SUBSYSTEM=="input", ENV{ID_BUS}=="usb", ENV{ID_INPUT_KEY}=="1", ENV{ID_USB_DRIVER}=="usbhid", RUN="/bin/sh -c 'echo 0 >/sys/\$devpath/../../../../authorized'"


#
# USB ethernet Device
#
#ACTION=="add", SUBSYSTEM=="net", ATTR{ifindex}=="[0-9]*", ATTR{iflink}=="[0-9]*", ENV{INTERFACE}=="eth[1-9]", RUN="/bin/sh -c 'echo 0 >/sys/\$devpath/../../authorized'"


#
# PCI Bluetooth Receiver & USB Dongle
#
#ACTION=="add", ATTR{bInterfaceClass}=="e0", ATTR{bInterfaceSubClass}=="01", ATTR{bInterfaceProtocol}=="01", RUN="/bin/sh -c 'echo 0 >/sys/\$devpath/authorized'"

#ACTION=="add", SUBSYSTEM=="usb", DRIVERS=="btusb", RUN="/bin/sh -c 'echo 0 >/sys/\$devpath/authorized'"

#ACTION=="add", SUBSYSTEM=="bluetooth", RUN="/bin/sh -c 'echo 0 >/sys/\$devpath/../../authorized'"

#ACTION=="add", SUBSYSTEM=="bluetooth", ATTRS{address}=="00:15:83:d0:ef:25", RUN="/bin/sh -c 'echo 0 >/sys/\$devpath/../../authorized'"


